{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/stripe/Client/src/Checkout.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nconst stripePromise = loadStripe('pk_live_EyX9IUtFoR87f7MCbxohcwVD00CNcsqHJ4');\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleClick = async event => {\n      // Get Stripe.js instance\n      const stripe = await stripePromise; // Call your backend to create the Checkout Session\n\n      const response = await fetch('/create-checkout-session', {\n        method: 'POST'\n      });\n      console.log(response);\n      const session = await response.json();\n      console.log(session); // When the customer clicks on the button, redirect them to Checkout.\n\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id\n      });\n\n      if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      role: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, \"Checkout\"));\n  }\n\n}\n\nconst Style = styled.section`\n\n`;\nexport default Checkout;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/stripe/Client/src/Checkout.js"],"names":["React","styled","loadStripe","BrowserRouter","Router","Switch","Route","Link","stripePromise","Checkout","Component","state","handleClick","event","stripe","response","fetch","method","console","log","session","json","result","redirectToCheckout","sessionId","id","error","render","Style","section"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAQA,MAAMC,aAAa,GAAGN,UAAU,CAAC,4CAAD,CAAhC;;AAIA,MAAMO,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B,EAD6B;;AAAA,SAKtCC,WALsC,GAKxB,MAAOC,KAAP,IAAiB;AAC5B;AACA,YAAMC,MAAM,GAAG,MAAMN,aAArB,CAF4B,CAI5B;;AACA,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAAD,EAA6B;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA7B,CAA5B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,YAAMK,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAtB;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAX4B,CAa5B;;AACA,YAAME,MAAM,GAAG,MAAMR,MAAM,CAACS,kBAAP,CAA0B;AAC7CC,QAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,OAA1B,CAArB;;AAKA,UAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,KA7BoC;AAAA;;AA+BrCC,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAQ,MAAA,OAAO,EAAEf,WAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,CADF;AAOD;;AAxCoC;;AA2CvC,MAAMgB,KAAK,GAAG3B,MAAM,CAAC4B,OAAQ;;CAA7B;AAIA,eAAepB,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst stripePromise = loadStripe('pk_live_EyX9IUtFoR87f7MCbxohcwVD00CNcsqHJ4');\n\n\n\nclass Checkout extends React.Component {\n  state = {\n \n  };\n\n handleClick = async (event) => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch('/create-checkout-session', { method: 'POST' });\n\n    console.log(response);\n    \n    const session = await response.json();\n  \n    console.log(session);\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n  \n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  }\n\n  render() {\n \n    return (\n      <Style>\n   <button onClick={handleClick} role=\"link\">\n      Checkout\n    </button>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n\n`;\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}