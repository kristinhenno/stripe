{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/stripe/client/src/components/Checkout.js\";\nimport React from \"react\";\nimport withContext from \"./withContext\";\nimport { loadStripe } from '@stripe/stripe-js'; // import styled from \"styled-components\";\n\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\nconst Checkout = props => {\n  // const { cart } = props.context;\n  // const itemKeys = Object.keys(cart || {});\n  // console.log(itemKeys);\n  // let checkoutArray = [];\n  // var i;\n  // for (i = 0; i < itemKeys.length; i++) {\n  //   // console.log(cart[itemKeys[i]].product.name)\n  //   let price = cart[itemKeys[i]].product.price * 100;\n  //   // console.log(price);\n  //   checkoutArray.push({\n  //     price_data: {\n  //       currency: 'usd',\n  //       product_data: {\n  //         name: cart[itemKeys[i]].product.name,\n  //       },\n  //       unit_amount: price,\n  //     },\n  //     quantity: cart[itemKeys[i]].quantity,\n  //   })\n  //   console.log(checkoutArray)\n  // }\n  // const handleClick = async (event) => {\n  //   // Get Stripe.js instance\n  //   const stripe = await stripePromise;\n  //   // Call your backend to create the Checkout Session\n  //   const response = await fetch('/create-checkout-session', {\n  //     method: 'POST',\n  //     headers: {\n  //       Accept: 'application/json',\n  //       'Content-type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       data: {\n  //         payment_method_types: ['card'],\n  //         line_items: checkoutArray,\n  //         mode: 'payment',\n  //         allow_promotion_codes: true,\n  //       }\n  //     })\n  //   });\n  //   console.log(response);\n  //   const session = await response.json();\n  //   console.log(session);\n  //   // When the customer clicks on the button, redirect them to Checkout.\n  //   const result = await stripe.redirectToCheckout({\n  //     sessionId: session.id,\n  //   });\n  //   if (result.error) {\n  //     // If `redirectToCheckout` fails due to a browser or network\n  //     // error, display the localized error message to your customer\n  //     // using `result.error.message`.\n  //   }\n  // }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.context.toCheckout(),\n    role: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Checkout\"));\n};\n\nexport default withContext(Checkout);","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/stripe/client/src/components/Checkout.js"],"names":["React","withContext","loadStripe","stripePromise","Checkout","props","context","toCheckout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;;AACA,MAAMC,aAAa,GAAGD,UAAU,CAAC,4CAAD,CAAhC;;AAGA,MAAME,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAQ,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,OAAN,CAAcC,UAAd,EAAvB;AAAmD,IAAA,IAAI,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,CAAR;AAMD,CAnFD;;AAqFA,eAAeN,WAAW,CAACG,QAAD,CAA1B","sourcesContent":["import React from \"react\";\nimport withContext from \"./withContext\";\nimport { loadStripe } from '@stripe/stripe-js';\n// import styled from \"styled-components\";\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\n\nconst Checkout = props => {\n  // const { cart } = props.context;\n  // const itemKeys = Object.keys(cart || {});\n  // console.log(itemKeys);\n  // let checkoutArray = [];\n\n  // var i;\n  // for (i = 0; i < itemKeys.length; i++) {\n\n  //   // console.log(cart[itemKeys[i]].product.name)\n\n  //   let price = cart[itemKeys[i]].product.price * 100;\n\n  //   // console.log(price);\n\n  //   checkoutArray.push({\n\n  //     price_data: {\n  //       currency: 'usd',\n  //       product_data: {\n  //         name: cart[itemKeys[i]].product.name,\n  //       },\n  //       unit_amount: price,\n  //     },\n  //     quantity: cart[itemKeys[i]].quantity,\n  //   })\n\n  //   console.log(checkoutArray)\n  // }\n\n\n\n  // const handleClick = async (event) => {\n  //   // Get Stripe.js instance\n  //   const stripe = await stripePromise;\n\n  //   // Call your backend to create the Checkout Session\n  //   const response = await fetch('/create-checkout-session', {\n  //     method: 'POST',\n  //     headers: {\n  //       Accept: 'application/json',\n  //       'Content-type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       data: {\n  //         payment_method_types: ['card'],\n  //         line_items: checkoutArray,\n  //         mode: 'payment',\n  //         allow_promotion_codes: true,\n  //       }\n  //     })\n\n\n\n  //   });\n\n  //   console.log(response);\n\n  //   const session = await response.json();\n\n  //   console.log(session);\n\n  //   // When the customer clicks on the button, redirect them to Checkout.\n  //   const result = await stripe.redirectToCheckout({\n  //     sessionId: session.id,\n  //   });\n\n\n  //   if (result.error) {\n  //     // If `redirectToCheckout` fails due to a browser or network\n  //     // error, display the localized error message to your customer\n  //     // using `result.error.message`.\n  //   }\n\n  // }\n\n\n  return (<div>\n    <button onClick={() => props.context.toCheckout()} role=\"link\">\n      Checkout\n    </button>\n  </div>\n  )\n}\n\nexport default withContext(Checkout);\n"]},"metadata":{},"sourceType":"module"}