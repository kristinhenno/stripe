{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/stripe/Client/src/Checkout2.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, MyCheckoutForm } from '@stripe/react-stripe-js';\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\nclass Checkout2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: {\n        payment_method_types: ['card'],\n        line_items: [{\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: 'T-shirt'\n            },\n            unit_amount: 2000\n          },\n          quantity: 1\n        }],\n        mode: 'payment',\n        allow_promotion_codes: true\n      }\n    };\n  }\n\n  //  handleClick = async (event) => {\n  //     // Get Stripe.js instance\n  //     const stripe = await stripePromise;\n  //     // Call your backend to create the Checkout Session\n  //     const response = await fetch('/create-checkout-session', { \n  //       method: 'POST',  \n  //       headers: {\n  //       Accept: 'application/json',\n  //       'Content-type': 'application/json'\n  //   },\n  //   body: JSON.stringify({\n  //       data: this.state.order\n  //   }) });\n  //     console.log(response);\n  //     const session = await response.json();\n  //     console.log(session);\n  //     // When the customer clicks on the button, redirect them to Checkout.\n  //     const result = await stripe.redirectToCheckout({\n  //       sessionId: session.id,\n  //     });\n  //     if (result.error) {\n  //       // If `redirectToCheckout` fails due to a browser or network\n  //       // error, display the localized error message to your customer\n  //       // using `result.error.message`.\n  //     }\n  //   }\n  render() {\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Elements, {\n      stripe: stripePromise,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(MyCheckoutForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nconst Style = styled.section`\n\n`;\nexport default Checkout2;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/stripe/Client/src/Checkout2.js"],"names":["React","styled","loadStripe","Elements","MyCheckoutForm","stripePromise","Checkout2","Component","state","order","payment_method_types","line_items","price_data","currency","product_data","name","unit_amount","quantity","mode","allow_promotion_codes","render","Style","section"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,yBAAvC;AAIA,MAAMC,aAAa,GAAGH,UAAU,CAAC,4CAAD,CAAhC;;AAIA,MAAMI,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,KAAK,EAAE;AACPC,QAAAA,oBAAoB,EAAE,CAAC,MAAD,CADf;AAEPC,QAAAA,UAAU,EAAE,CACV;AACEC,UAAAA,UAAU,EAAE;AACVC,YAAAA,QAAQ,EAAE,KADA;AAEVC,YAAAA,YAAY,EAAE;AACZC,cAAAA,IAAI,EAAE;AADM,aAFJ;AAKVC,YAAAA,WAAW,EAAE;AALH,WADd;AAQEC,UAAAA,QAAQ,EAAE;AARZ,SADU,CAFL;AAcPC,QAAAA,IAAI,EAAE,SAdC;AAePC,QAAAA,qBAAqB,EAAE;AAfhB;AADD,KAD8B;AAAA;;AAqBxC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEEC,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEf,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADK,CADF;AAOD;;AAjEqC;;AAoExC,MAAMgB,KAAK,GAAGpB,MAAM,CAACqB,OAAQ;;CAA7B;AAIA,eAAehB,SAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport {Elements, MyCheckoutForm} from '@stripe/react-stripe-js';\n\n\n\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\n\n\nclass Checkout2 extends React.Component {\n  state = {\n    order: {\n    payment_method_types: ['card'],\n    line_items: [\n      {\n        price_data: {\n          currency: 'usd',\n          product_data: {\n            name: 'T-shirt',\n          },\n          unit_amount: 2000,\n        },\n        quantity: 1,\n      },\n    ],\n    mode: 'payment',\n    allow_promotion_codes: true,\n  }\n  };\n\n//  handleClick = async (event) => {\n//     // Get Stripe.js instance\n//     const stripe = await stripePromise;\n\n//     // Call your backend to create the Checkout Session\n//     const response = await fetch('/create-checkout-session', { \n//       method: 'POST',  \n//       headers: {\n//       Accept: 'application/json',\n//       'Content-type': 'application/json'\n//   },\n//   body: JSON.stringify({\n//       data: this.state.order\n//   }) });\n\n    \n//     console.log(response);\n\n//     const session = await response.json();\n  \n//     console.log(session);\n\n//     // When the customer clicks on the button, redirect them to Checkout.\n//     const result = await stripe.redirectToCheckout({\n//       sessionId: session.id,\n//     });\n  \n\n//     if (result.error) {\n//       // If `redirectToCheckout` fails due to a browser or network\n//       // error, display the localized error message to your customer\n//       // using `result.error.message`.\n//     }\n//   }\n\n  render() {\n \n    return (\n      <Style>\n <Elements stripe={stripePromise}>\n      <MyCheckoutForm />\n    </Elements>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n\n`;\n\nexport default Checkout2;\n"]},"metadata":{},"sourceType":"module"}