{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/stripe/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Success from './components/Success';\nimport Cart from './components/Cart';\nimport ProductList from './components/ProductList';\nimport StripeContext from \"./components/Context\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { utimes } from 'fs';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n}); // import styled from \"styled-components\";\n\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = item => {\n      let cart = this.state.cart;\n      console.log(cart);\n\n      if (cart[item.id]) {\n        cart[item.id].quantity += item.quantity;\n      } else {\n        cart[item.id] = item;\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      this.setState({\n        cart: cart\n      });\n    };\n\n    this.removeItem = item => {\n      let cart = this.state.cart;\n\n      if (cart[item.id]) {\n        cart[item.id].quantity -= item.quantity;\n\n        if (cart[item.id].quantity === 0) {\n          delete cart[item.id];\n        }\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      this.setState({\n        cart: cart\n      });\n    };\n\n    this.toCheckout = async event => {\n      let cart = this.state.cart;\n      const itemKeys = Object.keys(this.state.cart || {});\n      let checkoutArray = [];\n      var i;\n\n      for (i = 0; i < itemKeys.length; i++) {\n        console.log(cart[itemKeys[i]].product.name);\n        let price = cart[itemKeys[i]].product.price * 100;\n        console.log(price);\n        checkoutArray.push({\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: cart[itemKeys[i]].product.name\n            },\n            unit_amount: price\n          },\n          quantity: cart[itemKeys[i]].quantity\n        });\n        console.log(checkoutArray);\n      } // Get Stripe.js instance\n\n\n      const stripe = await stripePromise; // Call your backend to create the Checkout Session\n\n      const response = await fetch('/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: {\n            payment_method_types: ['card'],\n            line_items: checkoutArray,\n            mode: 'payment',\n            allow_promotion_codes: true\n          }\n        })\n      });\n      console.log(response);\n      const session = await response.json();\n      console.log(session); // When the customer clicks on the button, redirect them to Checkout.\n\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id\n      });\n\n      if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      }\n    };\n\n    this.state = {\n      cart: [],\n      products: []\n    }; // this.routerRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    let cart = localStorage.getItem(\"cart\");\n    const products = await axios.get('http://localhost:8080/products');\n    cart = cart ? JSON.parse(cart) : {};\n    this.setState({\n      products: products.data,\n      cart: cart\n    });\n  }\n\n  render() {\n    console.log(this.state.cart);\n    return /*#__PURE__*/React.createElement(StripeContext.Provider, {\n      value: { ...this.state,\n        removeItem: this.removeItem,\n        addItem: this.addItem,\n        toCheckout: this.toCheckout\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      label: \"Products\",\n      to: \"/\",\n      component: Link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Cart\",\n      to: \"/cart\",\n      component: Link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: ProductList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/success\",\n      component: Success,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cart\",\n      component: Cart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/stripe/client/src/App.js"],"names":["React","loadStripe","Elements","Success","Cart","ProductList","StripeContext","axios","BrowserRouter","Switch","Route","Link","utimes","makeStyles","Paper","Tab","useStyles","root","flexGrow","stripePromise","App","Component","constructor","props","addItem","item","cart","state","console","log","id","quantity","localStorage","setItem","JSON","stringify","setState","removeItem","toCheckout","event","itemKeys","Object","keys","checkoutArray","i","length","product","name","price","push","price_data","currency","product_data","unit_amount","stripe","response","fetch","method","headers","Accept","body","data","payment_method_types","line_items","mode","allow_promotion_codes","session","json","result","redirectToCheckout","sessionId","error","products","componentDidMount","getItem","get","parse","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Success from './components/Success';\nimport Cart from './components/Cart';\nimport ProductList from './components/ProductList';\nimport StripeContext from \"./components/Context\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { utimes } from 'fs';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n// import styled from \"styled-components\";\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      products: []\n    };\n    // this.routerRef = React.createRef();\n\n  }\n\n  addItem = item => {\n    let cart = this.state.cart;\n    console.log(cart);\n    if (cart[item.id]) {\n      cart[item.id].quantity += item.quantity;\n    } else {\n      cart[item.id] = item;\n    }\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState({ cart: cart });\n  };\n\n  removeItem = item => {\n    let cart = this.state.cart;\n    if (cart[item.id]) {\n      cart[item.id].quantity -= item.quantity;\n      if (cart[item.id].quantity === 0) {\n        delete cart[item.id]\n      }\n    }\n\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState({ cart: cart });\n  }\n\n  toCheckout = async (event) => {\n    let cart = this.state.cart;\n    const itemKeys = Object.keys(this.state.cart || {});\n    let checkoutArray = [];\n\n    var i;\n    for (i = 0; i < itemKeys.length; i++) {\n\n      console.log(cart[itemKeys[i]].product.name)\n      let price = cart[itemKeys[i]].product.price * 100;\n\n      console.log(price);\n      checkoutArray.push({\n\n\n\n        price_data: {\n          currency: 'usd',\n          product_data: {\n            name: cart[itemKeys[i]].product.name,\n          },\n          unit_amount: price,\n        },\n        quantity: cart[itemKeys[i]].quantity,\n      })\n\n      console.log(checkoutArray)\n    }\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch('/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: {\n          payment_method_types: ['card'],\n          line_items: checkoutArray,\n          mode: 'payment',\n          allow_promotion_codes: true,\n        }\n      })\n\n\n\n    });\n\n    console.log(response);\n\n    const session = await response.json();\n\n    console.log(session);\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n\n  }\n\n  async componentDidMount() {\n    let cart = localStorage.getItem(\"cart\");\n    const products = await axios.get('http://localhost:8080/products');\n    cart = cart ? JSON.parse(cart) : {};\n    this.setState({\n      products: products.data,\n      cart: cart\n    });\n  }\n\n  render() {\n    console.log(this.state.cart)\n    return (\n      <StripeContext.Provider\n        value={{\n          ...this.state,\n          removeItem: this.removeItem,\n          addItem: this.addItem,\n          toCheckout: this.toCheckout\n        }}\n      >\n        <BrowserRouter >\n\n          <Paper >\n            <Tab label=\"Products\" to='/' component={Link} />\n            <Tab label=\"Cart\" to='/cart' component={Link} />\n          </Paper>\n\n\n          <div>\n            <Switch>\n              <Route\n                exact\n                path='/'\n                component={ProductList}\n              />\n            </Switch>\n            <Switch>\n              <Route\n                exact\n                path='/success'\n                component={Success}\n              />\n            </Switch>\n            <Switch>\n              <Route\n                exact\n                path='/cart'\n                component={Cart} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </StripeContext.Provider>\n\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}