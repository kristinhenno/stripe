{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/stripe/Client/src/Checkout.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: {\n        payment_method_types: ['card'],\n        line_items: [{\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: 'T-shirt'\n            },\n            unit_amount: 2000\n          },\n          quantity: 1\n        }],\n        mode: 'payment',\n        allow_promotion_codes: true\n      }\n    };\n\n    this.handleClick = async event => {\n      // Get Stripe.js instance\n      const stripe = await stripePromise; // Call your backend to create the Checkout Session\n\n      const response = await fetch('/create-checkout-session', {\n        method: 'POST'\n      });\n      console.log(response);\n      const session = await response.json();\n      console.log(session); // When the customer clicks on the button, redirect them to Checkout.\n\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id\n      });\n\n      if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      role: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, \"Checkout\"));\n  }\n\n}\n\nconst Style = styled.section`\n\n`;\nexport default Checkout;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/stripe/Client/src/Checkout.js"],"names":["React","styled","loadStripe","stripePromise","Checkout","Component","state","order","payment_method_types","line_items","price_data","currency","product_data","name","unit_amount","quantity","mode","allow_promotion_codes","handleClick","event","stripe","response","fetch","method","console","log","session","json","result","redirectToCheckout","sessionId","id","error","render","Style","section"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,MAAMC,aAAa,GAAGD,UAAU,CAAC,4CAAD,CAAhC;;AAIA,MAAME,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE;AACPC,QAAAA,oBAAoB,EAAE,CAAC,MAAD,CADf;AAEPC,QAAAA,UAAU,EAAE,CACV;AACEC,UAAAA,UAAU,EAAE;AACVC,YAAAA,QAAQ,EAAE,KADA;AAEVC,YAAAA,YAAY,EAAE;AACZC,cAAAA,IAAI,EAAE;AADM,aAFJ;AAKVC,YAAAA,WAAW,EAAE;AALH,WADd;AAQEC,UAAAA,QAAQ,EAAE;AARZ,SADU,CAFL;AAcPC,QAAAA,IAAI,EAAE,SAdC;AAePC,QAAAA,qBAAqB,EAAE;AAfhB;AADD,KAD6B;;AAAA,SAqBtCC,WArBsC,GAqBxB,MAAOC,KAAP,IAAiB;AAC5B;AACA,YAAMC,MAAM,GAAG,MAAMjB,aAArB,CAF4B,CAI5B;;AACA,YAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAAD,EAA6B;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA7B,CAA5B;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,YAAMK,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAtB;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAZ4B,CAc5B;;AACA,YAAME,MAAM,GAAG,MAAMR,MAAM,CAACS,kBAAP,CAA0B;AAC7CC,QAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,OAA1B,CAArB;;AAKA,UAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,KA9CoC;AAAA;;AAgDrCC,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAQ,MAAA,OAAO,EAAE,KAAKf,WAAtB;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,CADF;AAOD;;AAzDoC;;AA4DvC,MAAMgB,KAAK,GAAGjC,MAAM,CAACkC,OAAQ;;CAA7B;AAIA,eAAe/B,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { loadStripe } from '@stripe/stripe-js';\n\n\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\n\n\nclass Checkout extends React.Component {\n  state = {\n    order: {\n    payment_method_types: ['card'],\n    line_items: [\n      {\n        price_data: {\n          currency: 'usd',\n          product_data: {\n            name: 'T-shirt',\n          },\n          unit_amount: 2000,\n        },\n        quantity: 1,\n      },\n    ],\n    mode: 'payment',\n    allow_promotion_codes: true,\n  }\n  };\n\n handleClick = async (event) => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch('/create-checkout-session', { method: 'POST' });\n\n    \n    console.log(response);\n\n    const session = await response.json();\n  \n    console.log(session);\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n  \n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  }\n\n  render() {\n \n    return (\n      <Style>\n   <button onClick={this.handleClick} role=\"link\">\n      Checkout\n    </button>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n\n`;\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}