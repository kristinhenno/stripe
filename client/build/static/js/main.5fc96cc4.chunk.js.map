{"version":3,"sources":["components/Success.js","components/Context.js","components/withContext.js","components/CartItem.js","components/Cart.js","components/Item.js","components/ProductList.js","App.js","serviceWorker.js","index.js"],"names":["Success","localStorage","clear","Style","style","margin","textAlign","React","Component","styled","section","StripeContext","createContext","withContext","WrappedComponent","props","Context","Consumer","context","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","maxWidth","image","width","height","img","display","maxHeight","qt","item","cartItem","products","itemKey","classes","Paper","className","Grid","container","ButtonBase","alt","src","product","xs","sm","direction","Typography","gutterBottom","variant","name","price","Button","onClick","addItem","id","quantity","color","removeItem","cartBox","marginTop","marginLeft","backToShop","empty","cart","itemKeys","Object","keys","console","log","length","map","key","index","toString","toCheckout","role","to","component","Link","title","fontSize","pos","marginBottom","Item","Card","CardContent","CardActions","size","box","flexWrap","justifyContent","stripePromise","loadStripe","App","state","setItem","JSON","stringify","setState","event","a","checkoutArray","i","push","price_data","currency","product_data","unit_amount","stripe","fetch","method","headers","Accept","body","data","payment_method_types","line_items","mode","allow_promotion_codes","response","json","session","redirectToCheckout","sessionId","error","getItem","axios","get","parse","this","Provider","value","Tab","label","exact","path","ProductList","Cart","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5fc96cc4.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nclass Success extends React.Component {\n\n  componentDidMount() {\n    localStorage.clear();\n  }\n\n  render() {\n\n    return (\n      <Style>\n        <h3 style={{ margin: \"5%\", textAlign: \"center\" }}>Thank you!</h3>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n\n`;\n\nexport default Success;\n","import React from \"react\";\nconst StripeContext = React.createContext({});\nexport default StripeContext;","import React from \"react\";\nimport Context from \"./Context\";\n\nconst withContext = WrappedComponent => {\n    const WithHOC = props => {\n        return (\n            <Context.Consumer>\n                {context => <WrappedComponent {...props} context={context} />}\n            </Context.Consumer>\n        );\n    };\n\n    return WithHOC;\n};\n\nexport default withContext;","import React from \"react\";\nimport withContext from \"./withContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        maxWidth: '100%',\n        margin: '2%',\n    },\n    image: {\n        width: 128,\n        height: 128,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n\n    qt: {\n        width: '10%',\n    },\n    item: {\n        display: 'flex',\n    }\n\n\n}));\n\n\nconst CartItem = props => {\n    const { cartItem, itemKey } = props;\n    const { products } = props.context;\n    const classes = useStyles();\n    // console.log(cartItem);\n    return (\n        <div>\n\n            <Paper className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <ButtonBase className={classes.image}>\n                            <img className={classes.img} alt=\"complex\" src={cartItem.product.src} />\n                        </ButtonBase>\n                    </Grid>\n                    <Grid item xs={12} sm container>\n                        <Grid item xs container direction=\"column\" spacing={2}>\n                            <Grid item xs>\n                                <Typography gutterBottom variant=\"subtitle1\">\n                                    {cartItem.product.name}\n                                </Typography>\n                                <Typography className={classes.item} variant=\"body2\" gutterBottom>\n                                    <p className={classes.qt}> ${cartItem.product.price}</p>\n                                    <Button onClick={() =>\n                                        props.addItem({\n                                            id: cartItem.product.name,\n                                            products,\n                                            quantity: 1\n                                        })}>\n                                        <ExpandLessIcon />\n                                    </Button>\n                                </Typography>\n                                <Typography className={classes.item} variant=\"body2\" color=\"textSecondary\">\n                                    <p className={classes.qt}>   x{cartItem.quantity}  </p>\n                                    <Button\n                                        onClick={() =>\n                                            props.removeItem({\n                                                id: cartItem.product.name,\n                                                products,\n                                                quantity: 1\n                                            })\n                                        }\n                                    >\n                                        <ExpandMoreIcon />\n                                    </Button>\n\n                                </Typography>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div >\n    );\n};\n\nexport default withContext(CartItem);","import React from \"react\";\nimport withContext from \"./withContext\";\nimport CartItem from \"./CartItem\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    cartBox: {\n        marginTop: '10%',\n        marginLeft: '15%',\n    },\n    backToShop: {\n        margin: 'auto',\n        textAlign: 'center',\n    },\n\n    empty: {\n        margin: '5%',\n    }\n\n}));\n\nconst Cart = props => {\n    const classes = useStyles();\n    const { cart } = props.context;\n    const itemKeys = Object.keys(cart);\n\n    console.log(itemKeys);\n    // console.log(cart[\"Adidas Polo\"]);\n    return (\n        <div>\n            {itemKeys.length > 0 ? <div>\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        {itemKeys.map((key, index) => (\n\n                            <div key={index}>\n                                <CartItem\n                                    itemKey={key}\n                                    cartItem={cart[key.toString()]}\n                                    addItem={props.context.addItem}\n                                    removeItem={props.context.removeItem}\n                                />\n                            </div>\n                        ))\n\n                        }\n                    </Grid>\n                    <Grid className={classes.cartBox}>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.context.toCheckout()} role=\"link\">\n                            Proceed to Checkout\n    </Button>\n                    </Grid>\n                </Grid>\n            </div> : <div className={classes.backToShop}>\n                    <Typography className={classes.empty} variant=\"h5\" >Cart is Empty!</Typography>\n                    <Button variant=\"contained\" color=\"primary\" to='/' component={Link} role=\"link\">\n                        Back to Shop\n    </Button>\n\n                </div>}\n        </div>\n    )\n}\n\nexport default withContext(Cart);","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        margin: '20px',\n        width: '250px',\n    },\n\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        width: '90%',\n        maxHeight: '80%',\n        // maxHeight: '100%',\n    },\n\n});\n\nconst Item = props => {\n    const { product } = props;\n\n    const classes = useStyles();\n\n    return (<div>\n\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {product.name}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    ${product.price}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    <img className={classes.img} alt=\"complex\" src={product.src} />\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" color=\"primary\" onClick={() =>\n                    props.addItem({\n                        id: product.name,\n                        product,\n                        quantity: 1\n                    })\n                } size=\"small\">Add to Cart</Button>\n            </CardActions>\n        </Card>\n\n\n        {/* <div>{product.name}</div>\n        <div>${product.price}</div>\n        <div>{product.description}</div>\n        <button\n            onClick={() =>\n                props.addItem({\n                    id: product.name,\n                    product,\n                    quantity: 1\n                })\n            }\n        >\n            Add to Cart\n              </button> */}\n\n    </div>\n    )\n}\n\nexport default Item;","import React from \"react\";\nimport Item from \"./Item\";\nimport withContext from \"./withContext\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    box: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n\n    }\n\n});\n\nconst ProductList = props => {\n    const { products } = props.context;\n\n    const classes = useStyles();\n    // console.log(props.context);\n\n    return (<div className={classes.box}>\n        {products.map((product, index) => (\n            <Item\n                product={product}\n                key={index}\n                addItem={props.context.addItem} />\n        ))}\n\n\n    </div>)\n\n}\n\nexport default withContext(ProductList);","import React from 'react';\nimport './App.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Success from './components/Success';\nimport Cart from './components/Cart';\nimport ProductList from './components/ProductList';\nimport StripeContext from \"./components/Context\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst stripePromise = loadStripe('pk_test_9cWSl1Mlu5mEFLGQajwgixZx00gIx5qQeQ');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      products: []\n    };\n    // this.routerRef = React.createRef();\n\n  }\n\n  addItem = item => {\n    let cart = this.state.cart;\n    console.log(cart);\n    if (cart[item.id]) {\n      cart[item.id].quantity += item.quantity;\n    } else {\n      cart[item.id] = item;\n    }\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState({ cart: cart });\n  };\n\n  removeItem = item => {\n    let cart = this.state.cart;\n    if (cart[item.id]) {\n      cart[item.id].quantity -= item.quantity;\n      if (cart[item.id].quantity === 0) {\n        delete cart[item.id]\n      }\n    }\n\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState({ cart: cart });\n  }\n\n  toCheckout = async (event) => {\n    let cart = this.state.cart;\n    const itemKeys = Object.keys(this.state.cart || {});\n    let checkoutArray = [];\n\n    var i;\n    for (i = 0; i < itemKeys.length; i++) {\n\n      console.log(cart[itemKeys[i]].product.name)\n      let price = cart[itemKeys[i]].product.price * 100;\n\n      console.log(price);\n      checkoutArray.push({\n\n\n\n        price_data: {\n          currency: 'usd',\n          product_data: {\n            name: cart[itemKeys[i]].product.name,\n          },\n          unit_amount: price,\n        },\n        quantity: cart[itemKeys[i]].quantity,\n      })\n\n      console.log(checkoutArray)\n    }\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch('/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: {\n          payment_method_types: ['card'],\n          line_items: checkoutArray,\n          mode: 'payment',\n          allow_promotion_codes: true,\n        }\n      })\n\n\n\n    });\n\n    console.log(response);\n\n    const session = await response.json();\n\n    console.log(session);\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n\n  }\n\n  async componentDidMount() {\n    let cart = localStorage.getItem(\"cart\");\n    const products = await axios.get('/products');\n    cart = cart ? JSON.parse(cart) : {};\n    this.setState({\n      products: products.data,\n      cart: cart\n    });\n  }\n\n  render() {\n    console.log(this.state.cart)\n    return (\n      <StripeContext.Provider\n        value={{\n          ...this.state,\n          removeItem: this.removeItem,\n          addItem: this.addItem,\n          toCheckout: this.toCheckout\n        }}\n      >\n        <HashRouter  >\n\n          <Paper >\n            <Tab label=\"Products\" to='/' component={Link} />\n            <Tab label=\"Cart\" to='/cart' component={Link} />\n          </Paper>\n\n\n          <div>\n\n            <Switch>\n              <Route\n                exact\n                path='/'\n                component={ProductList}\n              />\n            </Switch>\n            <Switch>\n              <Route\n                exact\n                path='/success'\n                component={Success}\n              />\n            </Switch>\n            <Switch>\n              <Route\n                exact\n                path='/cart'\n                component={Cart} />\n            </Switch>\n\n          </div>\n        </HashRouter>\n      </StripeContext.Provider>\n\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}